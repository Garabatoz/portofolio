---
interface Project {
    title: string;
    description: string;
    image: string;
    tags: string[];
    demoUrl?: string;
    repoUrl?: string;
}

interface Props {
    title?: string;
    projects: Project[];
}

const { 
    title = "Mis Proyectos",
    projects 
} = Astro.props;
---

<section class="projects">
    <div class="container" >
        <h2 class="section-title">{title}</h2>
        
        <div class="projects-grid">
            {projects.map((project) => (
                <div class="project-card">
                    <div class="project-image">
                        <a href={project.demoUrl} target="_blank">
                            <img src={project.image} alt={project.title} />
                        </a>
                    </div>
                    <div class="project-content">
                        <h3>{project.title}</h3>
                        <p>{project.description}</p>
                        <div class="project-tags">
                            {project.tags.map((tag) => (
                                <span class="tag">{tag}</span>
                            ))}
                        </div>
                        <div class="project-links">
                            {project.demoUrl && (
                                <a href={project.demoUrl} class="btn btn-sm btn-primary" target="_blank">
                                    Demo
                                </a>
                            )}
                            {project.repoUrl && (
                                <a href={project.repoUrl} class="btn btn-sm btn-outline" target="_blank">
                                    CÃ³digo
                                </a>
                            )}
                        </div>
                    </div>
                </div>
            ))}
        </div>
    </div>
</section>

<style>
    .projects {
        padding: 5rem 0;
        background-color: var(--secondary-color);
    }
    
    .section-title {
        text-align: center;
        margin-bottom: 3rem;
        font-size: 2.5rem;
    }
    
    .projects-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 2rem;
    }
    
    .project-card {
        background-color: var(--light-color);
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .project-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    }
    
    .project-image {
        position: relative;
        height: 200px;
        overflow: hidden;
    }
    
    .project-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
    }
    
    .project-card:hover .project-image img {
        transform: scale(1.05);
    }
    
    .project-content {
        padding: 1.5rem;
    }
    
    .project-content h3 {
        margin-bottom: 0.5rem;
        font-size: 1.25rem;
    }
    
    .project-content p {
        margin-bottom: 1rem;
        color: var(--body-color);
    }
    
    .project-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 1.5rem;
    }
    
    .tag {
        background-color: var(--secondary-color);
        color: var(--body-color);
        padding: 0.35rem 0.75rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
    }
    
    .project-links {
        display: flex;
        gap: 1rem;
    }
    
    .btn-sm {
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
    }
    
    @media (max-width: 768px) {
        .projects {
            padding: 3rem 0;
        }
        
        .section-title {
            font-size: 2rem;
        }
        
        .projects-grid {
            grid-template-columns: 1fr;
        }
    }
</style> 